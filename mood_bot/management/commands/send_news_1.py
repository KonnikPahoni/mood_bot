import logging

from django.core.management.base import BaseCommand
from main import updater, remove_keyboard_markup
from mood_bot.models import TgUser
from mood_bot.services import plot_service


class Command(BaseCommand):
    help = "Send graph updates."

    UPDATE_TEXT_1 = (
        "–ü—Ä–∏–≤–µ—Ç! –ú–Ω–æ–π –Ω–∏–∫—Ç–æ, –∫—Ä–æ–º–µ @KonnikPahoni, –Ω–µ –ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ —è –≤—Å–µ —Ä–∞–≤–Ω–æ —Ä–µ—à–∏–ª —Ä–∞–∑–æ—Å–ª–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "
        "—Ç–æ–π –ø–∞—Ä–µ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª–∞. \n\n–í–æ-–ø–µ—Ä–≤—ã—Ö, —Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ! –í–æ-–≤—Ç–æ—Ä—ã—Ö, –¥–µ—Ä–∂–∏ —Å–≤–æ–π "
        "–≥—Ä–∞—Ñ–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è."
    )

    UPDATE_TEXT_2 = (
        "–Ø –ø–æ–ª–µ–∑–µ–Ω –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–º, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è—é —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –Ø —Ç–∞–∫–∂–µ –ø–æ–ª–µ–∑–µ–Ω —Ç–µ–º, –∫—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è—é —Ç–µ–±—è "
        "—Ä–µ—Ñ–ª–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –æ —Å–≤–æ–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –í–µ–¥—å –∫–∞–∫ —Ç—ã –∑–Ω–∞–µ—à—å, –≤ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ ‚Äî —Å–∏–ª–∞ üïâ. \n\n"
        "–ß–∏–ª–ª–æ–≤–æ–≥–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è, –¥—Ä—É–≥. "
    )

    def handle(self, *args, **options):

        for tg_user in TgUser.objects.all():
            try:
                updater.bot.send_message(
                    chat_id=tg_user.id,
                    text=self.UPDATE_TEXT_1,
                    reply_markup=remove_keyboard_markup,
                )

                _plot = plot_service(tg_user.id)
                updater.bot.send_photo(
                    tg_user.id,
                    _plot,
                    reply_markup=remove_keyboard_markup,
                    caption="This one includes all your mood records in the database. Use /plot command to "
                    "see only records for the last 180 days.",
                )

                updater.bot.send_message(
                    chat_id=tg_user.id,
                    text=self.UPDATE_TEXT_2,
                    reply_markup=remove_keyboard_markup,
                )
            except Exception as e:
                logging.error(
                    f"Could not send a message for user {tg_user.id}: {str(e)}"
                )

        self.stdout.write("Update sent out.")
